


var store = [

  
    
    {
      "title": "About",
      "excerpt":"Software Engineer. [Ruby on Rails](http://rubyonrails.org/),[React](https://reactjs.org) and Python enthusiast. Director of Technology at[Epifany](http://epifany.com/).![Leonel](/assets/images/leonel.jpg){: .align-center}I started dabbling into web development since the[GeoCities](https://en.wikipedia.org/wiki/Yahoo!_GeoCities) days; beforeframeworks were cool and when monolithic PHP websites where the norm. Later Istudied Computer Science at[Universidad del Valle de Guatemala](http://uvg.edu.gt/) and[North Carolina State University](https://www.ncsu.edu/).I've been working with Ruby on Rails and JavaScript for the last{{ site.time | date: \"%Y\" | minus: 2010 }} years. While doing consulting, Ilead a team of talented developers that built dozens of web and mobile Apps forclients of all sizes. Nowadays, I get to focus on our own products, be moreinvolved with every aspect, and explore newer trends and technologies.I contribute to open source whenever I can, you can find a list of mycontributions [here](/os).## Contact Me{% include icon-github.html username=site.github_username label='GitHub' %}{% include icon-linkedin.html username=site.linkedin_username label='LinkedIn ' %}{% include icon-twitter.html username=site.twitter_username label='Twitter' %}{% include icon-stackoverflow.html username=site.stackoverflow_username label='Stack Overflow' %}___  Photo by [Gerson Cifuentes](https://unsplash.com/photos/W1VqcpcnSHk) |  Tajumulco, Guatemala","categories": null,
      "tags": null,
      "url": "https://leonelgalan.com/about/"
    },
    
    {
      "title": "Open Source",
      "excerpt":"This is a list I've kept of my open source contributions. It feels great tocollaborate back to the projects that save me time and/or make my job easier.## Ruby/Rails### rails/rails> Ruby on Rails* [#27990 Use of ParameterFilter no longer forces `request.filtered_parameters` class to be Hash](https://github.com/rails/rails/pull/27990): Improves consistency of API* [#30535 Ignores a default subclass when `becomes(Parent)`](https://github.com/rails/rails/pull/30535): Fixes: #30399 STI field with default makes it impossible to get an instance  of the parent### rails-api/active_model_serializers -> leonelgalan/rspec-active_model_serializers> ActiveModel::Serializer implementation and Rails hooks> Simple testing of ActiveModelSerializers via a collection of matchers.* [#1947 Adds :have_valid_schema RSpec matcher](https://github.com/rails-api/active_model_serializers/pull/1947): Closed, abstracted to its own gem* [#2046 Fixes bug in Test::Schema when using filter_parameters](https://github.com/rails-api/active_model_serializers/pull/2046)* [#1 Fixes broken test](https://github.com/leonelgalan/rspec-active_model_serializers/pull/1)### activeadmin/activeadmin> The administration framework for Ruby on Rails applications.* [#4216 Allows Hash-like objects to be used in attributes_table](https://github.com/activeadmin/activeadmin/pull/4216): Fixed bug reported by me### alexreisner/geocoder> Complete Ruby geocoding solution.* [#1107 Allows radius to be a symbol representing a column in DB](https://github.com/alexreisner/geocoder/pull/1107)### roidrage/lograge> An attempt to tame Rails' default policy to log everything.* [#218 Replaces thread storage with request_store](https://github.com/roidrage/lograge/pull/218)### ankane/groupdate> The simplest way to group temporal data* [#115 Fixes error when using to `group_by_*`](https://github.com/ankane/groupdate/pull/115)* [#151 Fixes time_range for quarter/last combination](https://github.com/ankane/groupdate/pull/151)* [#175 Consistency between day_start and week_start](https://github.com/ankane/groupdate/pull/175): Merged in [361905e](https://github.com/ankane/groupdate/commit/361905ea29d272e58795d24ce7174d156fada501)### 58bits/cloudfront-signer -> leonelgalan/cloudfront-signer> Ruby gem for signing AWS CloudFront private content URLs and streaming paths.* [#5 Separates url building and signing](https://github.com/58bits/cloudfront-signer/pull/5)* [#6 Adds notice to README](https://github.com/58bits/cloudfront-signer/pull/6)* [#1 Adds license to gemspec](https://github.com/leonelgalan/cloudfront-signer/pull/1)* [#2 Refactor/3.x](https://github.com/leonelgalan/cloudfront-signer/pull/2): Major rewrite* [#4 Fixes policy generation when specifying ip_range](https://github.com/leonelgalan/cloudfront-signer/pull/4)* [#11 Support frozen strings](https://github.com/leonelgalan/cloudfront-signer/pull/11)### binarylogic/settingslogic* [#63 Adds an environment_vars_fallback to the Settingslogic class](https://github.com/binarylogic/settingslogic/pull/63): Closed, author recommended other gem that already had the feature I was proposing.## Javascript### [Resize Charts](https://github.com/leonelgalan/resize_charts)> This add-on allows you to resize, with precision, the charts in the active sheet. Type the desired width and height in inches or pixels, select a resolution and press \"Resize All\"Google Sheets Add-on, published in the [G Suite Marketplace](https://gsuite.google.com/marketplace/app/resize_charts/10131240662)### [leonelgalan/asdfjkl](https://github.com/leonelgalan/asdfjkl)> Determines if text contains gibberish.I publish my first package to [NPM](https://www.npmjs.com/package/asdfjkl)### Observable> Observable is the magic notebook for exploring data and thinking with code.Some of my best Javascript experiments are hosted here as [Observable Notebooks](https://observablehq.com/@leonelgalan). Including:* A [US-Canada Map](https://observablehq.com/@leonelgalan/us-canada-map) with GeoJSON* A [Multi-Hued Color Scale](https://observablehq.com/@leonelgalan/multi-hued-color-scales) generator using D3.* An experiment [embedding web fonts into SVGs](https://observablehq.com/@leonelgalan/embedding-fonts-into-an-svg)#### Other Repl* [CodePen](https://codepen.io/leonelgalan)* [Runkit](https://runkit.com/leonelgalan)### pbeshai/use-query-param> React Hook for managing state in URL query parameters with easy serialization.* [#69 Suggestion: Add a `mapParamsToProps` to `withQueryParams`](https://github.com/pbeshai/use-query-params/issues/69): Open### storybookjs/addon-jsx> This Storybook addon show you the JSX / template of the story.* [#97 feat: Upgrade react-element-to-jsx-string to latest version](https://github.com/storybookjs/addon-jsx/pull/97)## Developer Tools### Ansible#### zzet/ansible-rbenv-role> Ansible role for installing rbenv.* [#22 Fixes system rbenv ruby install](https://github.com/zzet/ansible-rbenv-role/pull/22): Fixed regression* [#25 Simplify rbenv_users interface: Username only](https://github.com/zzet/ansible-rbenv-role/issues/25): Improved API#### ANXS/postgresql> Fairly full featured Ansible role for Postgresql.* [#62 Merges user privileges into correct role](https://github.com/ANXS/postgresql/pull/62): Fixed regression#### smashingboxes/taperole> 🕹 Application Server Provisioning and Deployment with Ansible* [#23 Adds memcached](https://github.com/smashingboxes/taperole/pull/23): Added features* [#32 Remove vendored roles from Repository](https://github.com/smashingboxes/taperole/pull/32): Cleanup* [#36 Don't Install node.js from source](https://github.com/smashingboxes/taperole/pull/36): Major Rewrite* [#38 Chore/fix vagrant](https://github.com/smashingboxes/taperole/pull/38): Cleanup/improves dev tools* [#42 Installer updates](https://github.com/smashingboxes/taperole/pull/42): API Changes#### leonelgalan/ansible-node> Installs nodejs and the **latest** npm.### Homebrew#### caskroom/homebrew-cask> A CLI workflow for the administration of Mac applications distributed as binaries* [#1335 Updates Spectacle 0.7.3-74e5543](https://github.com/caskroom/homebrew-cask/pull/1335)* [#1337 Adds Cask for Hall](https://github.com/caskroom/homebrew-cask/pull/1337)### Static Analysis Tools#### leonelgalan/linter-markdownlint> Atom Linter for markdown using markdownlint/mdl* [#8 Run `mdl` in in the projectPath](https://github.com/leonelgalan/linter-markdownlint/pull/8)#### troessner/reek> Code smell detector for Ruby* [#402 Adds JSON output format](https://github.com/troessner/reek/pull/402)#### atom/language-ruby-on-rails> Ruby on Rails package for Atom* [#38 Completes controller's callback list](https://github.com/atom/language-ruby-on-rails/pull/38)#### AtomLinter/linter-codeclimate> An Atom Linter plugin for the Code Climate CLI* [#26 Adds support for reek and markdownlint](https://github.com/AtomLinter/linter-codeclimate/pull/26)#### slim-template/language-slim> Slim syntax package for Atom.* [#22 Fixes embedded syntax highlighting](https://github.com/slim-template/language-slim/pull/22)#### gilbarbara/codeclimate-stylelint> A Code Climate engine for the mighty, modern CSS linter* [#10 Exit 0 when analysisFiles is empty](https://github.com/gilbarbara/codeclimate-stylelint/pull/10)___  Photo by [Fabian Grohs](https://unsplash.com/photos/mCj7UinqOYQ) | \"Coder  Working on Macbook Pro\"","categories": null,
      "tags": null,
      "url": "https://leonelgalan.com/os/"
    },
    
    {
      "title": "Uses",
      "excerpt":"{% assign purchaseDate = \"October 29, 2013\" | date: \"%s\" %}## ComputerMacBook Pro (Retina, 13-inch, Late 2013, ~{{ \"now\" | date: \"%s\" | minus: purchaseDate | divided_by: 3600 | divided_by: 24 | divided_by: 365.0 | round }} years old) on macOS Catalina.## EditorA long time [Atom](https://atom.io/) user, I've been experimenting with **[VS Code](https://code.visualstudio.com/)** lately. I'vehad to relearn some shortcuts and find new extensions, but ultimately I've been pleased with the experience.* Theme: [Material Theme Palenight](https://github.com/material-theme/vsc-material-theme)* Font : [Victor Mono](https://rubjo.github.io/victor-mono/) with Ligatures (`\"editor.fontLigatures\": true`)* Extensions:  * [Bracket Pair Colorizer](https://github.com/CoenraadS/BracketPair)  * [Material Icon Theme](https://github.com/PKief/vscode-material-icon-theme)  * [Import Cost](https://github.com/wix/import-cost)## Developer Tools* [Homebrew](https://brew.sh/)* Version Managers:  * Ruby: [`rbenv`](https://github.com/rbenv/rbenv)  * Python: [`pyenv`](https://github.com/pyenv/pyenv) and [`pipenv`](https://github.com/pypa/pipenv)* Terminal Emulator: [iTerm2](https://iterm2.com/)* Terminal: [oh-my-zsh](https://ohmyz.sh/), quick and easy `rbenv`, `pipenv` and `git` plugins.## Desktop Apps* Window management: [Rectangle](https://rectangleapp.com/) a recommended alternative to [Spectacle](https://github.com/eczarny/spectacle).* Menu Bar management: [Vanilla](https://matthewpalmer.net/vanilla/). I've used [Bartender 3](https://www.macbartender.com/) before.* Keep-awake utility: [Amphetamine](https://apps.apple.com/us/app/amphetamine/id937984704)* Password manager: [1Password](https://1password.com/)* Web font installation: [SkyFonts](https://www.monotype.com/products/skyfonts)* Storage audit: [GrandPerspective](http://grandperspectiv.sourceforge.net/)* Color Picker: [Colorpicker](https://github.com/Toinane/colorpicker)## Web Apps* Design/graphics editor: [Figma](https://www.figma.com)* Javascript notebooks: [Observable](https://observablehq.com)## Chrome Extensions* React/Redux Developer Tools* uBlock Origin: Ad blocker* [UBlacklist](https://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe): Blocks specific sites from appearing in Google search results* [JSON Formatter](https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa)## Screencast Preferences/Settings* Prefer full screen, toggle using mousepad and not `` ⌘ + tab ``* Text Editor  * Configure editor's font size: 14 and window's zoom level: 2  * Hide the side bar if possible* Use font size 24 in the terminal (I've created a \"screencast\" profile)* Use a \"Hide Desktop Icons\" setting if available* Record at native resolution: 2560x1600 @2x, export at 50% 1280x80.* Audio: Apply Noise Reduction, EQ, Compressor and Normalizer to voice recordings.___  Photo by [Todd Quackenbush](https://unsplash.com/photos/IClZBVw5W5A) |  toolkit and tools","categories": null,
      "tags": null,
      "url": "https://leonelgalan.com/uses/"
    },{
        "title": "Hello World!",
        "excerpt":"Every blog starts with a “Hello World!” right? I don’t intend to write lengthy posts or even post regularly. I might as well be using     Twitter for the type of post I have in mind, but I like the idea of having my posts under     source control and the possibility of including code snippets when necessary. I’m particularly excited about a series of posts called What’s New?, inwhich I’ll share the new technologies, languages, or tools I constantlydiscover.   Photo by Arturo Rivera | Antigua  Guatemala, Guatemala ","categories": [],
        "tags": [],
        "url": "https://leonelgalan.com/2018/04/20/hello-world.html"
      },{
        "title": "What's New: R and Python",
        "excerpt":"Epifany recently hired a couple of Data Scientists. I decided to learn enough Rand Python to be dangerous. I’ve always wanted to say that. The truth is, I’mjust getting familiar with the two ecosystems to better support my team. R Learning Resources   DataCamp: Learn Data Science Online  Dataquest: Become a Data ScientistI tried DataCamp for a a couple of hours. I thought it was great and it taughtme fundamentals that allowed me to further explore R, but (there is always abut), I felt it moved too slow for developers trying to learn R. R Packages   Plumber: An R package that converts yourexisting R code to a web API using a handful of special one-line comments.  Shiny: Shiny is an R package that makes it easyto build interactive web apps straight from R.  Tidyverse: The tidyverse is an opinionatedcollection of R packages designed for data science. All packages share anunderlying design philosophy, grammar, and data structures. They had me atopinionated, coming from a strong Rails background I want someone to take leadand show us a way to do things, if we like it we use it, if not we keep looking.  Leaflet for R: This R package makes iteasy to integrate and control Leaflet maps in ROther   R Style Guide by the talentedJean Fan.  Hydrogen: Hydrogen is an interactivecoding environment that supports Python, R, JavaScript and other Jupyterkernels. I’ve been a fan of “notebooks” (the jupyterkind), but the closest I had so far wasRunKit. Now I can run R, Python andJavaScript, as notebooks within Atom (See screenshot below). The result of eachcell is shown within the code. Python I’ve done small bits of Python and even played withpandas before, but only now, after playing with RI get it. I’m currently replicating all my R experiments in Python, by the endof it I expect to choose one and expand my Data Science skills further.   Photo by Samuel Zeller | “Binders on a shelf.” ","categories": [],
        "tags": ["whats-new"],
        "url": "https://leonelgalan.com/2018/04/30/whats-new-r-and-python.html"
      },{
        "title": "What's New: Never Stop Learning",
        "excerpt":"A couple of weeks back I purchase an egghead.io subscription. If you don’t knowwhat egghead.io is, they explain it well on their homepage:   Learn the best JavaScript tools and frameworks from industry pros.   Video tutorials for badass web developers. Ruby is my strong suit, just see my open source collaborations. But lately, I’ve beenworking more and more with JavaScript, mostly React. I’ve done well enough, but I could use some help, especiallyfrom industry pros. So far, I’ve been satisfied with the platform and content, I’ve completed these courses:   How to Write Open Source Javascript Library  Advance JavaScript Foundations  Up and Running with TypeScript  Use TypeScript to develop React Applications  Build Custom CLI Tooling with oclif and TypeScript  Design Systems with React and TypeScript in Storybook  Reduce Redux Boilerplate with Redux-Actions  Introduction to State Machines Using XStateAfter I’m done with egghead.io, I plan to move to TESTING JAVASCRIPT.com which iscreated by the same crowd, but hyper-focused on JavaScript testing.   Photo by Jessica Ruscello | “assorted book lot” ","categories": [],
        "tags": ["whats-new"],
        "url": "https://leonelgalan.com/2020/01/23/whats-new-never-stop-learning.html"
      },{
        "title": "Rubocop's `--auto-gen-config`",
        "excerpt":"I’ve always been fascinated with linters, code formatters and other static analysis tools. For Ruby, Rubocop is king, it will enforce many of the guidelines outlined in the community’s Ruby Style Guide, but it’s flexible enough for you to decide how to write your code. Setting up Rubocop when first starting a project allows you to quickly fix all the initial offenses (150+ for a vanilla Rails installation, see below) and analyze your code constantly (onsave, on commit, before accepting a pull requests) to keep your project offense free. Looking for a way to increase your engineering team&#39;s velocity? Install a linter and stop arguing in PRs about code formatting/style. &mdash; Brandon ✌︎(&#39;ω&#39;)✌︎ (@BrandonMathis) February 25, 2020A friend tweeted the above recently and he’s right; I’ve spent countless hours debating: single vs. double quotes and spaces vs. tabs. But it really doesn’t matter, let’s write the code however we like and have a tool like Rubocop enforce the guidelines we’ve agreed beforehand. I’ve been out of consulting for almost 5 years now, so I don’t get to start new Rails apps every couple of months. I created one today, to follow along a graphql tutorial (future blog post, maybe?) and stumble upon a feature from Rubocop I didn’t know: auto generate configuration. Let’s explore it together! Tutorial Setup and Defaults Make sure you have installed your desired versions of both Ruby and Rails installed. At the time of this writing I wanted the latest 2.6 ruby and the latest Rails, which correspond to the versions shown below: $ ruby -vruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-darwin19]$ rails -vRails 6.0.2.1Create a new Rails app and get inside the newly created directory: rails new rubocop-app-democd rubocop-app-demoOpen the Gemfile and add rubocop and rubocop-rails inside a :development group and add require: false to both lines according to the gems’ documentation (1)(2): group :development do  # ...  gem 'rubocop', require: false  gem 'rubocop-rails', require: falseendRunning rubocop without an explicit configuration (default) results in 172 offenses in 40 files: $ rubocop --format offenses 40/40 files |========================== 100 ===========================&gt;| Time: 00:00:0055   Style/StringLiterals40   Layout/LineLength39   Style/FrozenStringLiteralComment6    Layout/EmptyLineAfterGuardClause6    Style/IfUnlessModifier4    Style/Documentation3    Style/ExpandPathArguments2    Layout/ArgumentAlignment2    Layout/SpaceInsideArrayLiteralBrackets2    Style/ClassAndModuleChildren2    Style/StderrPuts2    Style/SymbolArray1    Bundler/OrderedGems1    Layout/MultilineOperationIndentation1    Metrics/AbcSize1    Metrics/CyclomaticComplexity1    Metrics/MethodLength1    Metrics/PerceivedComplexity1    Style/PerlBackrefs1    Style/RedundantBegin1    Style/SpecialGlobalVars--172  TotalNot a great start, let’s get this sorted out. The Process Rubocop includes a tool to auto generate a configuration . Simply pass the --auto-gen-config flag to generate a configuration acting as a TO DO list: $ rubocop --auto-gen-config$ rubocop .The following cops were added to RuboCop, but are not configured. Please set Enabled to either `true` or `false` in your `.rubocop.yml` file: - Style/HashEachMethods - Style/HashTransformKeys - Style/HashTransformValuesInspecting 40 files......................................40 files inspected, no offenses detectedThis created two files .rubocop.yml and .rubocop_todo.yml. The first is your project’s final configuration file, for now, it simply inherits a temporary configuration from .rubocop_todo.yml (TO DO from now on). This allows the project to have no offenses. But the point of the TO DO is for us to remove the configuration records one by one as the offenses are removed from the code base or the configuration is moved outside of the TO DO. First let’s fix the warnings by enabling the three cops that aren’t configured yet. Add the following to .rubocop.yml: 4fff12c Style/HashEachMethods:  Enabled: trueStyle/HashTransformKeys:  Enabled: trueStyle/HashTransformValues:  Enabled: true$ rubocop .Inspecting 40 files........................................40 files inspected, no offenses detectedNow let’s focus on the first entry of the TO DO: # Offense count: 1# Cop supports --auto-correct.# Configuration parameters: TreatCommentsAsGroupSeparators, Include.# Include: **/*.gemfile, **/Gemfile, **/gems.rbBundler/OrderedGems:  Exclude:    - 'Gemfile'This cop seems like a good idea, as the project grows ordered gems will make the Gemfile easier to read. We also learned that the cop supports auto correct, so simply removing this block from the TO DO and running rubocop autocorrect will remove the offense: 443b282 $ rubocop --auto-correctInspecting 40 filesC.......................................Offenses:Gemfile:39:3: C: [Corrected] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem listen should appear before web-console.  gem 'listen', '&gt;= 3.0.5', '&lt; 3.2'  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^40 files inspected, 1 offense detected, 1 offense corrected$ rubocop .Inspecting 40 files........................................40 files inspected, no offenses detectedNow onto the next block: # Offense count: 2# Cop supports --auto-correct.# Configuration parameters: EnforcedStyle, IndentationWidth.# SupportedStyles: with_first_argument, with_fixed_indentationLayout/ArgumentAlignment:  Exclude:    - 'bin/webpack'    - 'bin/webpack-dev-server'We do want the Layout/ArgumentAlignment cop, but files in the bin/ folder are usually automatically generated, and to avoid a constant back and forth, it’s probably better to avoid bin/ when running all the cops (AllCops). Add the following to your project’s Rubocop configuration (.rubocop.yml) and remove the block from the TO DO. While we are here, let’s also ignore node_modules/, I remember having some issues with ruby files inside node-sass. 9e0f61d AllCops:  Exclude:    - bin/*    - node_modules/**/*Similarly, remove all other cops’ configurations that deal only with files inside the bin/ folder (8 cops and some files inside a ninth). $ rubocop .Inspecting 32 files................................32 files inspected, no offenses detectedCop by cop, decide what you want to do with each:s   Remove the excludes (so offenses are corrected or pop up)  Move the excludes to .rubocop.yml if you don’t want to deal with a cop/file combination.  Completely disabling a cop, by setting Enabled: false  Ignore the custom configuration in the TO DO and fallback to the default  Change the recommended configuration.I ended up removing the excludes for Layout/SpaceInsideArrayLiteralBrackets, Style/SpecialGlobalVars, Style/StringLiterals and Style/SymbolArray. Moving the excludes for Style/ClassAndModuleChildren, because the two files were created by Rails and I don’t plan to touch them much: test/channels/application_cable/connection_test.rb and test/test_helper.rb. Disabling Style/Documentation and Style/FrozenStringLiteralComment. Ignoring the configuration for Metrics/AbcSize, Metrics/CyclomaticComplexity, Metrics/MethodLength and Metrics/PerceivedComplexity. Changing Layout/LineLength’s Max to 120. To match the rulers in my editor. After going clearing the TO DO, remove the file and the line inheriting from it in your project’s configuration. Run rubocop’s autocorrect again: 32f03b8 6814cc7 $ rubocop --auto-correctInspecting 32 filesC.............C..........C.C.CC.Offenses:Gemfile:33:28: C: [Corrected] Style/SymbolArray: Use %i or %I for an array of symbols.  gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]                           ^^^^^^^^^^^^^^^^^^^^^^^^^^...test/channels/application_cable/connection_test.rb:1:9: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.require \"test_helper\"        ^^^^^^^^^^^^^32 files inspected, 17 offenses detected, 17 offenses correctedThe Result All 17 offenses were corrected, let’s do it one more time to have a clean result: $ rubocop .Inspecting 32 files................................32 files inspected, no offenses detectedFor this project, based on my preferences, the final .rubocop.yml file looks like this: AllCops:  Exclude:    - bin/**    - node_modules/**/*Style/HashEachMethods:  Enabled: trueStyle/HashTransformKeys:  Enabled: trueStyle/HashTransformValues:  Enabled: trueStyle/Documentation:  Enabled: falseStyle/FrozenStringLiteralComment:  Enabled: falseStyle/ClassAndModuleChildren:  Exclude:    - test/channels/application_cable/connection_test.rb    - test/test_helper.rbLayout/LineLength:  Max: 120  Photo by Lenny Kuhne | “gray vehicle being fixed inside factory using robot machines” ","categories": [],
        "tags": ["ruby","rails"],
        "url": "https://leonelgalan.com/2020/02/26/rubocops-auto-gen-config.html"
      },{
        "title": "Rails Friends: API and Webpacker",
        "excerpt":"It appears you can not use --api and --webpack=react together when creating a new Rails App. It’s a shame, because having Rails handle the backend and React, or other JS framework, handle the frontend is a common setup. But it is possible to add webpacker to an api App and use HtmlWebpackPlugin to serve the webpack bundles. Nothing on the rails new documentation suggest that the two are incompatible, but running rails new rails-api-webpacker-demo --api --webpack=react together, appears to ignore the webpacker configuration steps. $ rails new --help...    [--api], [--no-api]          # Preconfigure smaller stack for API only apps--webpacker, [--webpack=WEBPACK] # Preconfigure Webpack with a particular framework (options: react, ...)...I found this comment on a Webpacker issue titled: “Rails API + Webpacker?”. This blog post is based on the linked repository, broken down into steps for easier understanding. Tutorial Create an --api App Because --api preconfigures a smaller stack, let’s start with it and add webpacker later. rails new rails-api-webpacker-demo --apiInstall Webpacker Add to Gemfile: gem 'webpacker'Run: bundle installrails webpacker:installrails webpacker:install:reactInstall HtmlWebpackPlugin and HtmlWebpackHarddiskPlugin Run: yarn add html-webpack-plugin html-webpack-harddisk-pluginConfigure the installed plugins in config/webpack/environment.js according to their documentation (1)(2): const { environment } = require('@rails/webpacker')const HtmlWebpackPlugin = require('html-webpack-plugin')const HtmlWebpackHarddiskPlugin = require('html-webpack-harddisk-plugin')environment.plugins.append(  'html',  new HtmlWebpackPlugin({    alwaysWriteToDisk: true  }))environment.plugins.append(  'html-harddisk',  new HtmlWebpackHarddiskPlugin())module.exports = environmenta8fad1d Setup Rails to Serve the HTML Generated by Webpack rails generate controller pages indexRewrite the pages controller to:   Inherit from ActionController::Base. Because this is an API app, ApplicationController inherits from ActionController::API instead  Have :index render the file generated by webpackclass PagesController &lt; ActionController::Base  def index    render file: 'public/packs/index.html'  endendRemove  the get 'pages/index' added to routes (config/routes.rb) and add: root 'pages#index', as: :pages_indexget '*path', to: 'pages#index'6ff32b0 Conclusion Run both commands in different terminals: webpack-dev-serverrails serverOpen http://localhost:3000/ and you’ll see both: “Hello React” in the body and “Hello World from Webpacker” in the browser’s console. I’ve published this on Github at leonelgalan/rails-api-webpacker-demo and deployed to Heroku as ancient-falls-96742.herokuapp.com   Photo by Erfan Moradi ","categories": [],
        "tags": ["rails","webpack"],
        "url": "https://leonelgalan.com/2020/03/01/rails-api-and-webpacker.html"
      },{
        "title": "Ansible and Raspberry Pi",
        "excerpt":"I’ve been playing with Raspberry Pi computers for a while; I bought my first back in 2015. Since then I’ve bought more than I can remember. Setting them up has always been a ritual: I got a cheap USB keyboard/mouse combo, a USB/Ethernet adapter for my Mac and all the right HDMI cables, the mini included for the Zero. I knew I couldn’t keep searching for the right syntax for dd every time I wanted to set up a Pi and that keyboard/mouse set is a strain to the eyes. I would prefer to keep them hidden. I wrote this Shell and Ansible scripts to get faster to the fun bits of the projects.   This was originally written as a personal project’s README, so it’s format might be a combination of that and a blog post. - Me in the editor role Install Raspbian Network Configuration For those Pis with wireless connectivity, We can have them connect to a wireless network on its first boot by adding a wpa_supplicant.conf to the SD card before. Make a copy of wpa_supplicant.conf and fill in your network’s name (ssid) and pre-shared key (psk), configure other properties as needed (e.g. country): cp wpa_supplicant.conf.example wpa_supplicant.confcode wpa_supplicant.confctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdevupdate_config=1country=USnetwork={  ssid=\"\"  psk=\"\"  key_mgmt=WPA-PSK}Prepare your SD Card All the code in this section should be run on the same terminal session. Just make sure you edit the IMAGE_NAME and DISK variables before. Download Raspian Choose the Raspian image of your choice and download it from https://www.raspberrypi.org/downloads/raspbian/. Modify IMAGE_NAME before running. # Options: raspbian (Desktop), raspbian_full (Desktop with recommended software), raspbian_lite (Lite)IMAGE_NANE=raspbian_litecurl --location --remote-name \"https://downloads.raspberrypi.org/${IMAGE_NANE}_latest\"unzip *.ziprm *.zipIMAGE=$(ls *.img)Copy Raspbian and Setup the Network Insert your card and find the disk’s name: diskN, where N is a number. Identify the disk (not the partition) of your SD card (disk2, not disk2s1) by looking at its size  (for example, a 16 GB SD card might show as *15.5 GB diskutil listMake sure you modify DISK before. Copy raspbian to the card and setup the network to:   Connect to a wireless network.  Accept incoming SSH connections.DISK=disk2diskutil unmountDisk /dev/$DISKsudo dd bs=1m if=$IMAGE of=/dev/r$DISK conv=sync# Between few seconds and a couple of minutes, Ctrl+T to view Progress# Copy the wpa_supplicant.conf you created abovecp wpa_supplicant.conf /Volumes/boot/# Enable incoming SSH connections by creating an empty ssh file.touch /Volumes/boot/ssh# Eject the SD card properlysudo diskutil eject /dev/r$DISKFind your Raspberry Pi’s IP Address Insert the SD card on the and turn on your Pi; Wait about 1 minute for it to boot. Find your Raspberry Pi’s IP address by searching for part of its MAC Address: $ sudo nmap -sP 192.168.1.0/24 | awk '/^Nmap/{ip=$NF}/B8:27:EB/{print ip}192.168.1.11You might need to install nmap before. See additional details in this Stack Exchange’s post. Copy this IP address to the hosts file under [pi]: [pi]192.168.1.11Install Ansible’s requirements and Run step01.yml A note about Ansible   Ansible is an open-source software provisioning, configuration management, and application-deployment tool. - Wikipedia: Ansible (software) What You Need to Know?   hosts define the list of hosts, playbooks say in which hosts they run. We are saying there is host pi and its IP Address.  The playbooks, defines in which hosts are going to run or “all”, as who (what user) and what roles to run and their configuration.  Roles are groupings of functionality, which facilitates sharing and there are plenty hosted in the Ansible Galaxy. This “project” has one local role and uses two from the Ansible Galaxy, listed in the requirements.yml and installed by calling the ansible-galaxy command below.  A project might have local roles, in this case pip3. Inside of it the folders are named appropriately, you should explore its contents to peek inside of how Ansible works.  Each role’s documentation should tell you what the role can do and how to set it up.step01.yml This is the minimum configuration I do on my Raspberry Pi’s before using them. It adds a single role: raspi_config which does some configuration by default, but allows me to override those to better suit my needs. Implicit (default)   Update and Upgrade  Expand filesystem to fill the SD card  Setup the Locale: en_US.UTF-8Explicit   Setup my timezone to America/New_York, default is UTC  Enable the camera, if that’s my intended use for this particular Pi  Replace the default pi user with myself (whoami) and copy my public ssh key, so I can ssh in without specifying a user or typing a password.Find the defaults and additional settings on the role’s README. Edit step01.yml as needed before running the following lines: ansible-galaxy install -r requirements.ymlansible-playbook _initial.yml -i hosts --ask-passRun step02.yml Now connected as the user you just created (remote_user: leonelgalan, REMEMBER to change this), install the packages you might need, edit step02.yml_ based on your desire setup:   Packages:          python3-pip      sense-hat      python-smbus      i2c-tools      python-setuptools        Python Packages          Upgrade setuptools      RPI.GPIO      adafruit-circuitpython-htu21d      ansible-playbook step02.yml -i hosts --ask-passBuild Something This is a short list of projects I’ve built with Pis, hopefully it inspires you to build something:   My latest project is a timelapse camera / humidity and temperature sensor to keep track of my new sourdough starter: “Paco” and its offspring levains, naturally called “Paquito”  I was growing some chili peppers from seeds and used a Raspberry Pi with the SenseHat’s display as a dashboard of sorts; I wanted to measure the soil humidity, air temperature/humidity, and light  I build hat for a Raspberry Pi Zero W, with a NoIR camera and a custom IR lamp (three super bright LED)The led can be controlled through one of the GPIO pins, so it can be turn on and off with the camera  There is one behind my office TV that boots into Chrome’s Kiosk mode with a business dashboard  There is another behind my living room TV that orchestrates local media: sync to computers, local and remote backups. Because it’s always running it’s always doing something else: track temperature, internet speed, etc.  Photo by Harrison Broadbent ","categories": [],
        "tags": ["raspberry pi","ansible"],
        "url": "https://leonelgalan.com/2020/04/24/ansible-raspberry-pi.html"
      },{
        "title": "New Hardware",
        "excerpt":"After 10+ years of using Apple’s Magic Keyboard and Mouse, don’t judge, I switched! I bought Logitech’s MX Keys Wireless Illuminated Keyboard and MX Master 3 Wireless Mouse with Hyper-fast Scroll. Often, I work with Windows and Mac, side-by-side, and Logitech Flow makes it so much easier. //TODO: Blog about setting up the Magic Mouse 2 in Windows 10 For most of my development I’m using Ubuntu, installed through WSL. I needed the contents of a file inside Ubuntu in my Mac: I read the file contents and sent that to the Windows Clipboard: cat secrets.txt | clip.exeI moved my mouse into my Mac and because my clipboard is shared across computers I was able to paste the contents inside the secrets.txt on my Mac. That single operation used all three operating systems at once! Other Pros   Being able to charge the mouse while in use  The mouse ergonomics are much better than the Magic Mouse  The scroll wheels are truly amazing and I have a middle click button  Quickly toggle between 3 devices (even without using Flow)  Having a numpad  No switches to toggle when changing between Windows/Mac  USB Type C, no more lighting cables  Photo by Raul Perțe ","categories": [],
        "tags": ["short","uses","hardware"],
        "url": "https://leonelgalan.com/2021/03/23/newish-hardware.html"
      }]
